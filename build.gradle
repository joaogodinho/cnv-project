apply plugin: 'java'
apply plugin: 'application'

mainClassName = "pt.ulisboa.tecnico.cnv.httpserver.HTTPServer"

repositories {
    flatDir name: 'localRepo', dirs: "$rootProject.projectDir/lib"
}

dependencies {
    compile files("$rootProject.projectDir/lib/BIT")
    compile fileTree(dir: 'lib', include: '*.jar')
}

task runServer(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath

    main = 'pt.ulisboa.tecnico.cnv.httpserver.HTTPServer'
    if ( project.hasProperty("appArgs") ) {
        args Eval.me(appArgs)
    }
    jvmArgs "-XX:-UseSplitVerifier"
}

task runInstrumentation(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath

    main = 'pt.ulisboa.tecnico.cnv.instrumentation.InstrumentationTool'

    args "$sourceSets.main.output.classesDir/pt/ulisboa/tecnico/cnv/factorization/IntFactorization.class"
    jvmArgs "-XX:-UseSplitVerifier"
}

task runProxy(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath

    main = 'pt.ulisboa.tecnico.cnv.proxyserver.Proxy'
    standardInput = System.in

    jvmArgs "-XX:-UseSplitVerifier"
}

compileJava {
    enabled = !('runServer' in project.gradle.startParameter.taskNames)
    enabled = !('test' in project.gradle.startParameter.taskNames)
}

test {
    jvmArgs "-XX:-UseSplitVerifier"
}

jar.dependsOn runInstrumentation
